-
    service: arista.studio.v1.StudioConfigService
    method: Set
    body:
        value:
            key:
                studio_id: 7fc3495a-00fe-4225-8ec7-df91f4cbabd7
                workspace_id: f603860b-6c50-42fb-86d0-8bcbe4101600
            display_name: 'Campus Fabric (Clone)'
            description: 'ver 1.16 Deploy and manage an Arista validated L2 MLAG campus fabric, and configure networks within the campus.'
            template:
                type: TEMPLATE_TYPE_MAKO
                body: "<%\nimport sys, os, json, ipaddress\nimport tagsearch_python.tagsearch_pb2_grpc as tsgr\nimport tagsearch_python.tagsearch_pb2 as tspb\n\nmyDevice = ctx.getDevice()\nmyDeviceID = myDevice.id\nmyRole = None\ndevsInCampus = {}\ndevsInPod = {}\nmyCampus = None\nmyPod = None\ncampusLabel = 'Campus'\ncampusPodLabel = 'Campus-Pod'\nhostnameLabel = 'hostname'\n\ntsclient = ctx.getApiClient(tsgr.TagSearchStub)\n\ntvs = tspb.TagValueSearchRequest(label=campusLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query='%s:\"%s\"' % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId, topology_studio_request=True)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    devsInCampus.setdefault(tag.value, [])\n    devsInCampus[tag.value].append(match.device.device_id)\n    if match.device.device_id == myDeviceID:\n      assert not myCampus, \"Device %s not allowed to be in two campuses (%s, %s)\" %(myDeviceID, myCampus, tag.value)\n      myCampus = tag.value\n\ntvs = tspb.TagValueSearchRequest(label=campusPodLabel, workspace_id=ctx.studio.workspaceId, topology_studio_request=True)\ntvsresp = tsclient.GetTagValueSuggestions(tvs)\nfor tag in tvsresp.tags:\n  tagtmr = tspb.TagMatchRequestV2(query='%s:\"%s\"' % (tag.label, tag.value), workspace_id=ctx.studio.workspaceId, topology_studio_request=True)\n  tagresp = tsclient.GetTagMatchesV2(tagtmr)\n  for match in tagresp.matches:\n    devsInPod.setdefault(tag.value, [])\n    devsInPod[tag.value].append(match.device.device_id)\n    if match.device.device_id == myDeviceID:\n      assert not myPod, \"Device %s not allowed to be in two PODs (%s, %s)\" %(myDeviceID, myPod, tag.value)\n      myPod = tag.value\n      myRole = \"leaf\"\n\nif not myCampus:\n    ctx.error(\"! This device %s is not in a campus. Not generating configuration for it\" %myDeviceID)\n    return\n\ndevsInMyCampus = devsInCampus[myCampus]\npodsInMyCampus = []\nfor dev in devsInMyCampus:\n  for pod, devs in devsInPod.items():\n    if dev in devs:\n      if pod not in podsInMyCampus:\n        podsInMyCampus.append(pod)\npodsInMyCampus = list(set(podsInMyCampus))\n\nmySplineRole = myLeafRole = podDevices = None\ncommonVlans = []\ncampus = campusPicker.resolve()[\"campus\"]\nfabricType = campus.get(\"fabricType\")\ncommonVlans = campus.get(\"commonVlans\", [])\ncommonMlagConfig = campus.get(\"commonMlagConfig\")\nlacpMode = commonMlagConfig[\"lacpMode\"]\nmlagVlan = commonMlagConfig.get(\"mlagVlan\")\nvirtualRouterMacAddress = commonMlagConfig.get(\"virtualRouterMacAddress\")\nmlagPortChannelId = commonMlagConfig.get(\"mlagPortChannelId\")\nmlagIPSubnet = commonMlagConfig.get(\"mlagPeerLinkSubnet\")\nmlagSubnetMask = commonMlagConfig.get(\"mlagSubnetMask\")\nmlag_subnet = ipaddress.ip_network(mlagIPSubnet)\nmlag_subnet_mask = mlagSubnetMask\nif mlag_subnet_mask != mlag_subnet.prefixlen:\n  mlag_subnet = list(mlag_subnet.subnets(new_prefix=mlag_subnet_mask))[ int(self.leaf_domain) - 1 ]\nmlagRole = None    # Primary/Secondary\npeerLinkMembers = []\n\nmgmtVlans = [vlan for vlan in commonVlans if vlan[\"commonVlanIsMgmt\"]]\nif len(mgmtVlans) > 1:\n  raise Exception(\"More than one management VLAN specified: %r\" %[vlan[\"commonVlanID\"] for vlan in mgmtVlans])\n\n\nsplinePicker = campus.get(\"splinePicker\")\nsplines = []    # list of Device objects\nfor dev in devsInMyCampus:\n  sp = splinePicker.resolve(device=dev)\n  if sp and sp.get(\"spline\") and sp.get(\"spline\").get(\"splineRole\"):\n      splines.append(dev)\n\ndownlinkDetails = {}\nspline = {}\ninbandMgmtIPSubnet = None\nif splinePicker and splinePicker.resolve().get(\"spline\"):\n  spline = splinePicker.resolve().get(\"spline\")\n  inbandMgmtIPSubnet = spline.get(\"splineInbandMgmtIPSubnet\")\n  mlagRole = mySplineRole = spline.get(\"splineRole\")\n  if mlagRole:\n    assert not myPod, \"Spline inputs cannot be specified for a device that has the POD tag %s\" %myPod\n    myRole = \"spline\"\n\nif myRole == \"spline\":\n  pch = 10\n  for intf in myDevice.getInterfaces():\n    peer_device, peer_interface = intf.getPeerInfo()\n    if peer_device is None:\n      continue\n    if peer_device.id == myDeviceID:\n      continue\n    if peer_device.id in splines:\n      ctx.info(\"Interface %s connected to peer spline %s over peer interface %s (assuming mlag peer link)\" %(intf.name, peer_device.id, peer_interface.name))\n      peerLinkMembers.append(intf.name)\n    for pod in sorted(devsInPod.keys()):\n      if peer_device.id not in devsInPod[pod]:\n        ctx.info(\"Ignoring connection to peer device %s over peer interface %s because it's not in a pod\" %(peer_device.id, peer_interface.name))\n        continue\n      ctx.info(\"Interface %s connected to peer device %s over peer interface %s in pod %s\" %(intf.name, peer_device.id, peer_interface.name, pod))\n      pch += 1\n      downlinkDetails[intf.name] = {'downlinkInterfaceParameters': {'downlinkChannelNum': pch}}\n\n  externalUplinkDetails = {}\n  externalUplinkResolver = spline.get(\"externalUplinkResolver\")\n  if externalUplinkResolver:\n    for intf in myDevice.getInterfaces():\n      intfName = intf.name\n      val = externalUplinkResolver.resolve(intfName, strict=True)\n      if val:\n        externalUplinkDetails[intfName] = val.get(\"externalUplink\")\n\nif myRole != \"spline\" and myRole != \"leaf\":\n    ctx.error(\"Device %s is not a spline or in a POD. Not generating configuration for it.\" %myDeviceID)\n    return\n\npodDevices = []   # List of device IDs\nif myPod:\n    podDevices = devsInPod.get(myPod)\n    podDevices = list(set(podDevices))\n\nallLeafRoles = {}\npod = campus[\"podPicker\"].resolve()[\"pod\"]\nleafs = pod[\"leafs\"]\nfor dev in podDevices:\n  lf = leafs.resolve(device=dev)\n  if lf and lf.get(\"leaf\"):\n    allLeafRoles[dev] = lf.get(\"leaf\").get(\"leafRole\")\npodMembers = [d for d in podDevices if allLeafRoles.get(d) == \"Member\"]\nleaf = leafs.resolve().get(\"leaf\")\nif myRole == \"leaf\":\n  myLeafRole = leaf[\"leafRole\"]\n  inbandMgmtIPSubnet = leaf.get(\"leafInbandMgmtIPSubnet\")\n  if myLeafRole == \"Primary\" or myLeafRole == \"Secondary\":\n    mlagRole = myLeafRole\n  if myLeafRole == \"Secondary\":\n      assert len(podDevices) >= 2, \"There must be at least 2 devices in the POD if there is a secondary (currently %r)\" %podDevices\n\n  leafUplinkDetails = {}\n  for intf in myDevice.getInterfaces():\n    peer_device, peer_interface = intf.getPeerInfo()\n    if peer_device is None:\n      continue\n    if peer_device.id == myDeviceID:\n      continue\n    if myLeafRole == \"Primary\" or myLeafRole == \"Secondary\" or myLeafRole == \"None\":\n      if peer_device.id in podDevices and peer_device.id not in podMembers:\n        ctx.info(\"Interface %s connected to peer leaf %s over peer interface %s (assuming mlag peer link)\" %(intf.name, peer_device.id, peer_interface.name))\n        peerLinkMembers.append(intf.name)\n      pch = 11 + sorted(devsInPod.keys()).index(myPod)\n      for spline in splines:\n        if peer_device.id == spline:\n          ctx.info(\"Interface %s connected to spline %s over peer interface %s\" %(intf.name, peer_device.id, peer_interface.name))\n          leafUplinkDetails[intf.name] = {\"leafUplinkChannelGroup\": pch}\n          break\n    elif myLeafRole == \"Member\":\n      peerRole = allLeafRoles.get(peer_device.id)\n      pch = 21 + sorted(podMembers).index(myDeviceID)\n      ctx.info(\"Interface %s connected to peer %s, role %s over peer interface %s\" %(intf.name, peer_device.id, peerRole, peer_interface.name))\n      leafUplinkDetails[intf.name] = {\"leafUplinkChannelGroup\": pch}\n\n  leafDownlinkDetails = {}\n  if myLeafRole == \"Primary\" or myLeafRole == \"Secondary\" or myLeafRole == \"None\":\n    for intf in myDevice.getInterfaces():\n      peer_device, peer_interface = intf.getPeerInfo()\n      if peer_device is None:\n        continue\n      if peer_device.id not in podMembers:\n        continue\n      pch = 21 + sorted(podMembers).index(peer_device.id)\n      leafDownlinkDetails[intf.name] = {\"leafDownlinkChannelGroup\": pch}\n\nmyMlagIP = None\npeerMlagIP = None\nif mlagRole == \"Primary\":\n  myMlagIP = str(list(mlag_subnet.hosts())[0])\n  peerMlagIP = str(list(mlag_subnet.hosts())[1])\nelse:\n  myMlagIP = str(list(mlag_subnet.hosts())[1])\n  peerMlagIP = str(list(mlag_subnet.hosts())[0])\n\n%>\\\n\nbanner motd\nDevice ID: ${myDeviceID}\nRole: ${myRole} ${mySplineRole or myLeafRole or \"\"}\n  %  if myRole == \"leaf\":\nPOD: ${myPod}\nDevices in this POD: ${', '.join(sorted(podDevices))}\n%  endif\nPODs in this campus: ${', '.join(sorted(podsInMyCampus))}\nDevices in this campus: ${', '.join(sorted(devsInMyCampus))}\nDescription: Campus Switch\nAccess by authorized users only!\nEOF\n\n%  for vlan in commonVlans:\nvlan ${vlan[\"commonVlanID\"]}\n    name ${vlan[\"commonVlanName\"]}\n%  endfor\n\n%  if myRole == \"spline\":\n%    for vlan in commonVlans:\n%      if vlan[\"IPHelperAddress\"]:\nip dhcp relay information option\nip dhcp relay always-on\n       <%break%>\n%      endif\n%    endfor\n%    if inbandMgmtIPSubnet:\ninterface Loopback1\n    description Router ID\n    ip address ${inbandMgmtIPSubnet}\n%    endif\n\n## ----------------- added vrf instance and vrf in interface and swapped the 2 interface loops ---\n%    for vlan in spline.get(\"splineVlans\", []):\n%      if vlan[\"vrf\"]:\nvrf instance ${vlan[\"vrf\"]}\n%      endif\ninterface vlan ${vlan[\"splineVlanID\"]}\n%      if vlan[\"vrf\"]:\n    vrf ${vlan[\"vrf\"]}\n%      endif\n%      if vlan[\"primarySecondary\"] == \"Primary\":\n    ip address ${vlan[\"splineVlanIPSubnet\"]}\n%      else:\n    ip address ${vlan[\"splineVlanIPSubnet\"]} secondary\n%      endif\n!\n%    endfor\n## -----------     this loop used to be before the loop above ----------\n%    for vlan in commonVlans:\n%      if vlan[\"commonVlanVIP\"] or vlan[\"IPHelperAddress\"]:\ninterface vlan ${vlan[\"commonVlanID\"]}\n%        if vlan[\"commonVlanVIP\"]:\n    ip virtual-router address ${vlan[\"commonVlanVIP\"]}\n    no autostate\n%        endif\n%        if mgmtVlans and vlan.get(\"IPHelperAddress\"):\n    ip helper-address 127.0.0.1 source-interface vlan ${mgmtVlans[0][\"commonVlanID\"]}\n%        endif\n%        if vlan.get(\"IPHelperAddress\"):\n    ip helper-address ${vlan[\"IPHelperAddress\"]}\n%        endif\n%      endif\n%    endfor\n## -- end of changes \n\n%  elif myRole == \"leaf\":\n%    if mgmtVlans:\ninterface vlan ${mgmtVlans[0][\"commonVlanID\"]}\n    description In band management\n%      if inbandMgmtIPSubnet:\n    no autostate\n    ip address ${inbandMgmtIPSubnet}\n%      endif\n%      if mgmtVlans[0][\"commonVlanVIP\"]:\nip route 0.0.0.0/0 ${mgmtVlans[0][\"commonVlanVIP\"]}\n%      endif \n%    endif\n%  endif    # myRole == spline or leaf\n\n%  if myRole == \"spline\":\n! One port channel down to each POD\n%    if downlinkDetails:\n%      for intfName, params in downlinkDetails.items():\n    <% intfParams = params[\"downlinkInterfaceParameters\"] %>\ninterface ${intfName}\n    description Connects to Campus POD\n    channel-group ${intfParams[\"downlinkChannelNum\"]} mode ${lacpMode}\n%        if mgmtVlans:\n    switchport access vlan ${mgmtVlans[0][\"commonVlanID\"]}\n%        endif\ninterface port-channel ${intfParams[\"downlinkChannelNum\"]}\n    switchport\n%    if (mySplineRole == \"Primary\" or mySplineRole == \"Secondary\"):\n    mlag ${intfParams[\"downlinkChannelNum\"]}\n%    endif\n    switchport mode trunk\n%        if mgmtVlans:\n    switchport trunk native vlan ${mgmtVlans[0][\"commonVlanID\"]}\n%        endif\n%      endfor\n%    endif    # downlinkDetails\n%    if externalUplinkDetails:\n%      for intfName, params in externalUplinkDetails.items():\ninterface ${intfName}\n    description Uplink to external network\n    no switchport\n    ip address ${params.get(\"externalUplinkIPSubnet\")}\n%        if params.get(\"externalUplinkMTU\"):\n    mtu ${params.get(\"externalUplinkMTU\")}\n%        endif\n%        if params.get(\"externalUplinkSpeed\") == \"auto\":\n    speed auto\n%        else:\n    speed forced ${params.get(\"externalUplinkSpeed\")}\n%        endif\n%      endfor\n%    endif    # externalUplinkDetails\nip routing\nip virtual-router mac-address ${virtualRouterMacAddress}\n%    if (mySplineRole == \"Primary\" or mySplineRole == \"Secondary\"):\n${mlagConfig()}\n%    endif\n%  elif myRole == \"leaf\":\n<% index = 0 %>\n%    for intfName, params in leafUplinkDetails.items():\n%      if myLeafRole == \"Primary\" or myLeafRole == \"Secondary\" or myLeafRole == \"Member\":\n    <% group = params[\"leafUplinkChannelGroup\"] %>\n%      endif\n%      if myLeafRole == \"None\":\n    <% group = params[\"leafUplinkChannelGroup\"] %>\n        <% group = group + index %>\n%      endif\n\ninterface ${intfName}\n    channel-group ${group} mode ${lacpMode}\ninterface port-channel ${group}\n%      if myLeafRole == \"Primary\" or myLeafRole == \"Secondary\":\n    description Uplink to Spline\n    switchport\n    mlag ${group}\n%      elif myLeafRole == \"Member\": \n    description Uplink\n%      else: \n    description Uplink to Spline\n<% index = index + 1 %> \n%      endif\n    switchport\n    switchport mode trunk\n%      if mgmtVlans:   # Always use native vlan for managment\n    switchport access vlan ${mgmtVlans[0][\"commonVlanID\"]}\n    switchport trunk native vlan ${mgmtVlans[0][\"commonVlanID\"]}\n%      endif\n\n%    endfor   # each uplink\n\n%    for intfName, params in leafDownlinkDetails.items():\n    <% group = params[\"leafDownlinkChannelGroup\"] %>\ninterface ${intfName}\n    channel-group ${group} mode ${lacpMode}\ninterface port-channel ${group}\n    description Downlink to member switches\n    switchport\n    switchport mode trunk\n%      if mgmtVlans:\n    switchport access vlan ${mgmtVlans[0][\"commonVlanID\"]}\n    switchport trunk native vlan ${mgmtVlans[0][\"commonVlanID\"]}\n%    endif\n    mlag ${group}\n%    endfor   # each downlink\n\n%    if (myLeafRole == \"Primary\" or myLeafRole == \"Secondary\") and len(podDevices) > 1:\n${mlagConfig()}\n%    endif\n\n%  endif  # myRole == spline or leaf\n\n<%def name=\"mlagConfig()\" filter=\"trim\">\n!\n%  for peerLinkMember in peerLinkMembers:\ninterface ${peerLinkMember}\n    description MLAG peer link member\n%    if lacpMode is not None:\n    channel-group ${mlagPortChannelId} mode ${lacpMode}\n%    endif\n%  endfor\ninterface port-channel ${mlagPortChannelId}\n    description MLAG peer link\n    switchport\n    switchport mode trunk\n    switchport trunk group MLAG-PEER\nvlan ${mlagVlan}\n    trunk group MLAG-PEER\nno spanning-tree vlan-id ${mlagVlan}\ninterface vlan ${mlagVlan}\n    ip address ${myMlagIP}/31\n    no autostate\nmlag configuration\n    domain-id MLAG\n    local-interface vlan ${mlagVlan}\n    peer-address ${peerMlagIP}\n    peer-link port-channel ${mlagPortChannelId}\n!\n</%def>\n"
            input_schema:
                fields:
                    values:
                        fabricType:
                            id: fabricType
                            name: fabricType
                            label: 'Fabric Type'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: 'L2 MLAG'
                                static_options:
                                    values:
                                        - 'L2 MLAG'
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        mlagLinkSubnet:
                            id: mlagLinkSubnet
                            name: mlagPeerLinkSubnet
                            label: 'MLAG Peer Link Subnet'
                            description: 'Enter in CIDR notation'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: 169.254.0.0/31
                                static_options: null
                                format: cidr
                                length: null
                                pattern: null
                                dynamic_options: null
                        internalVlan:
                            id: internalVlan
                            name: mlagVlan
                            label: 'MLAG Peer Link VLAN'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '4094'
                                range: null
                                static_options: null
                                dynamic_options: null
                        mlagPortChannelId:
                            id: mlagPortChannelId
                            name: mlagPortChannelId
                            label: 'MLAG Port Channel Number'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '2000'
                                range: null
                                static_options: null
                                dynamic_options: null
                        virtualRouterMac:
                            id: virtualRouterMac
                            name: virtualRouterMacAddress
                            label: 'Virtual Router MAC Address'
                            description: 'Enter a common virtual MAC address for the gateways'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: '00:1c:73:00:00:99'
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        mlagSubnetMask:
                            id: mlagSubnetMask
                            name: mlagSubnetMask
                            label: 'MLAG Subnet Mask'
                            description: 'Set the size of the MLAG subnet'
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: '31'
                                range: null
                                static_options:
                                    values:
                                        - '31'
                                        - '30'
                                dynamic_options: null
                        lacpMode:
                            id: lacpMode
                            name: lacpMode
                            label: 'LACP Mode'
                            description: 'Set the link aggregation mode for the MLAG peer link'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: active
                                static_options:
                                    values:
                                        - active
                                        - passive
                                        - on
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonMlagConfig:
                            id: commonMlagConfig
                            name: commonMlagConfig
                            label: 'MLAG Configuration'
                            description: 'Global MLAG parameters defined for the campus fabric.'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - mlagLinkSubnet
                                        - internalVlan
                                        - mlagPortChannelId
                                        - virtualRouterMac
                                        - mlagSubnetMask
                                        - lacpMode
                        commonVlanID:
                            id: commonVlanID
                            name: commonVlanID
                            label: 'VLAN ID'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: null
                                range: 1..4094
                                static_options: null
                                dynamic_options: null
                        commonVlanName:
                            id: commonVlanName
                            name: commonVlanName
                            label: Name
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonVlanIsMgmt:
                            id: commonVlanIsMgmt
                            name: commonVlanIsMgmt
                            label: 'Management VLAN'
                            description: 'Use VLAN for in-band management'
                            required: false
                            type: INPUT_FIELD_TYPE_BOOLEAN
                            boolean_props:
                                default_value: false
                        commonVlanVIP:
                            id: commonVlanVIP
                            name: commonVlanVIP
                            label: 'SVI Virtual IP Address'
                            description: 'Enter a default gateway for the campus subnets'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: ip
                                length: null
                                pattern: null
                                dynamic_options: null
                        IPHelperAddress:
                            id: IPHelperAddress
                            name: IPHelperAddress
                            label: 'IP Helper Address'
                            description: 'Enter the IP address or hostname of the DHCP server'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        commonVlan:
                            id: commonVlan
                            name: commonVlan
                            label: 'VLAN configuration'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - commonVlanID
                                        - commonVlanName
                                        - commonVlanIsMgmt
                                        - commonVlanVIP
                                        - IPHelperAddress
                        commonVlans:
                            id: commonVlans
                            name: commonVlans
                            label: VLAN
                            description: 'Define networks deployed within the campus. Device-specific addressing is configured within each campus Spline and pod.'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: commonVlan
                                key: null
                        splineRole:
                            id: splineRole
                            name: splineRole
                            label: 'MLAG Role'
                            description: 'Set the MLAG role for the campus Spline, which provides an arbitrary assignment of the Spline within the topology. MLAG will auto-negotiate the primary-secondary operational status.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options:
                                    values:
                                        - Primary
                                        - Secondary
                                        - None
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        splineVlanID:
                            id: splineVlanID
                            name: splineVlanID
                            label: 'VLAN ID'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: null
                                range: null
                                static_options: null
                                dynamic_options:
                                    values:
                                        - '{"fieldId": "commonVlanID"}'
                        splineVlanIPSubnet:
                            id: splineVlanIPSubnet
                            name: splineVlanIPSubnet
                            label: 'IP Address and Subnet Mask'
                            description: 'Enter in CIDR notation, e.g. /24'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: cidr
                                length: null
                                pattern: null
                                dynamic_options: null
                        primarySecondary:
                            id: primarySecondary
                            name: primarySecondary
                            label: 'IP Primary Secondary'
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: Primary
                                static_options:
                                    values:
                                        - Primary
                                        - Secondary
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        55cdaed6-229a-4856-872b-d39c4001bb3e:
                            id: 55cdaed6-229a-4856-872b-d39c4001bb3e
                            name: vrf
                            label: VRF
                            description: Optional
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        splineVlan:
                            id: splineVlan
                            name: splineVlan
                            label: 'VLAN configuration'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - splineVlanID
                                        - splineVlanIPSubnet
                                        - primarySecondary
                                        - 55cdaed6-229a-4856-872b-d39c4001bb3e
                        splineVlans:
                            id: splineVlans
                            name: splineVlans
                            label: 'SVI Configuration'
                            description: 'Define a device-specific IP address in CIDR notation for each campus network.'
                            required: false
                            type: INPUT_FIELD_TYPE_COLLECTION
                            collection_props:
                                base_field_id: splineVlan
                                key: null
                        splineInbandMgmtIPSubnet:
                            id: splineInbandMgmtIPSubnet
                            name: splineInbandMgmtIPSubnet
                            label: 'Loopback IP address'
                            description: 'Configure an optional loopback interface in CIDR notation for device management.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: cidr
                                length: null
                                pattern: null
                                dynamic_options: null
                        externalUplinkIPSubnet:
                            id: externalUplinkIPSubnet
                            name: externalUplinkIPSubnet
                            label: 'IP Address and Subnet Mask'
                            description: 'Enter in CIDR notation, e.g. /24'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: cidr
                                length: null
                                pattern: null
                                dynamic_options: null
                        externalUplinkMTU:
                            id: externalUplinkMTU
                            name: externalUplinkMTU
                            label: MTU
                            description: 'Define an MTU value (max. 9214)'
                            required: false
                            type: INPUT_FIELD_TYPE_INTEGER
                            integer_props:
                                default_value: null
                                range: null
                                static_options: null
                                dynamic_options: null
                        externalUplinkSpeed:
                            id: externalUplinkSpeed
                            name: externalUplinkSpeed
                            label: 'Link Speed'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: auto
                                static_options: null
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        externalUplink:
                            id: externalUplink
                            name: externalUplink
                            label: 'Uplink to External Network'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - externalUplinkIPSubnet
                                        - externalUplinkMTU
                                        - externalUplinkSpeed
                        externalUplinkResolver:
                            id: externalUplinkResolver
                            name: externalUplinkResolver
                            label: 'Uplink to External Network'
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: externalUplink
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG
                                input_tag_label: interface
                                tag_filter_query: null
                        spline:
                            id: spline
                            name: spline
                            label: 'Spline Configuration'
                            description: 'Configuration for the interfaces that connect to Primary and Secondary in each Campus POD'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - splineRole
                                        - splineVlans
                                        - splineInbandMgmtIPSubnet
                                        - externalUplinkResolver
                        splinePicker:
                            id: splinePicker
                            name: splinePicker
                            label: 'Campus Spline Devices'
                            description: 'Configure campus Spline devices for the campus fabric.'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: spline
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: null
                        leafRole:
                            id: leafRole
                            name: leafRole
                            label: 'MLAG Role'
                            description: 'Primary and secondary form an MLAG pair, and all other devices are members.'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options:
                                    values:
                                        - Primary
                                        - Secondary
                                        - Member
                                        - None
                                format: null
                                length: null
                                pattern: null
                                dynamic_options: null
                        leafInbandMgmtIPSubnet:
                            id: leafInbandMgmtIPSubnet
                            name: leafInbandMgmtIPSubnet
                            label: 'In-band Management IP Address and Subnet Mask'
                            description: 'Enter in CIDR notation'
                            required: false
                            type: INPUT_FIELD_TYPE_STRING
                            string_props:
                                default_value: null
                                static_options: null
                                format: cidr
                                length: null
                                pattern: null
                                dynamic_options: null
                        leaf:
                            id: leaf
                            name: leaf
                            label: 'Campus Leaf Details'
                            description: 'Add, remove, and configure campus leaf devices in this pod.'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - leafRole
                                        - leafInbandMgmtIPSubnet
                        leafs:
                            id: leafs
                            name: leafs
                            label: 'Campus Leaf Devices'
                            description: 'Add, remove, and configure campus leaf devices in this pod.'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: leaf
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: device
                                tag_filter_query: null
                        pod:
                            id: pod
                            name: pod
                            label: 'Pod Configuration'
                            description: 'Configuration specific to a particular POD'
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - leafs
                        podPicker:
                            id: podPicker
                            name: podPicker
                            label: 'Campus Pod'
                            description: 'Configure campus leaf devices within campus pod groupings.'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: pod
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: Campus-Pod
                                tag_filter_query: null
                        campus:
                            id: campus
                            name: campus
                            label: Campus
                            description: null
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - fabricType
                                        - commonMlagConfig
                                        - commonVlans
                                        - splinePicker
                                        - podPicker
                        campusPicker:
                            id: campusPicker
                            name: campusPicker
                            label: Campus
                            description: 'Manage campus configuration, including all campus leafs.'
                            required: false
                            type: INPUT_FIELD_TYPE_RESOLVER
                            resolver_props:
                                base_field_id: campus
                                display_mode: RESOLVER_FIELD_DISPLAY_MODE_SPARSE
                                input_mode: RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG
                                input_tag_label: Campus
                                tag_filter_query: null
                        root:
                            id: root
                            name: ""
                            label: ""
                            description: ""
                            required: false
                            type: INPUT_FIELD_TYPE_GROUP
                            group_props:
                                members:
                                    values:
                                        - campusPicker
                layout:
                    value: '{}'
